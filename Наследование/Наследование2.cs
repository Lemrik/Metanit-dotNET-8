//  Доступ к членам базового класса из класса-наследника


//  Вернемся к нашим классам Person и Employee.
//  Хотя Employee наследует весь функционал от класса Person, посмотрим, что будет в следующем случае:

/*
        class Employee : Person
        {
            public void PrintName()
            {
                Console.WriteLine(Name);
            }
        }
*/

//  Этот код не сработает и выдаст ошибку, так как переменная _name объявлена с модификатором private
//  и поэтому к ней доступ имеет только класс Person.
//  Но зато в классе Person определено общедоступное свойство Name, которое мы можем использовать (см. класс Employee)

//  Таким образом, производный класс может иметь доступ только к тем членам базового класса,
//  которые определены с модификаторами private protected (если базовый и производный класс находятся в одной сборке),

//  public, internal (если базовый и производный класс находятся в одной сборке), protected и protected internal.

