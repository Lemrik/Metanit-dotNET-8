using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Свойства
{
    internal class Person
    {
        private string name = "Undefined";

        public string Name
        {
            get
            {
                return name;    // возвращаем значение свойства
            }
            set
            {
                name = value;   // устанавливаем новое значение свойства
            }
        }
    }
}

/*
    Здесь в классе Person определено приватное поле name, которая хранит имя пользователя,
    и есть общедоступное свойство Name. Хотя они имеют практически одинаковое название за исключением регистра, 
    но это не более чем стиль, названия у них могут быть произвольные и не обязательно должны совпадать.
 
    Через это свойство мы можем управлять доступом к переменной name. 
    В свойстве в блоке get возвращаем значение поля:
        get { return name; }

    А в блоке set устанавливаем значение переменной name. 
    Параметр value представляет передаваемое значение, которое передается переменной name.
        set { name = value; }

    В программе мы можем обращаться к этому свойству, как к обычному полю. 
    Если мы ему присваиваем какое-нибудь значение, то срабатывает блок set, 
    а передаваемое значение передается в параметр value:
        person.Name = "Tom";

    Если мы получаем значение свойства, то срабатывает блок get,
    который по сути возвращает значение переменной name:
        string personName = person.Name; 
 */

// !!!! То есть по сути свойство Name ничего не хранит, оно выступает в роли посредника между внешним кодом и переменной name.