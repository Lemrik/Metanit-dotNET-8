/*
    Кроме обычных методов в языке C# предусмотрены специальные методы доступа, 
    которые называют свойства. Они обеспечивают простой доступ к полям классов и структур, 
    узнать их значение или выполнить их установку.


    Стандартное описание свойства имеет следующий синтаксис:

    [модификаторы] тип_свойства название_свойства
    {
        get { действия, выполняемые при получении значения свойства}
        set { действия, выполняемые при установке значения свойства}
    }

    Вначале определения свойства могут идти различные модификаторы, 
    в частности, модификаторы доступа. Затем указывается тип свойства, 
    после которого идет название свойства. Полное определение свойства содержит два блока: get и set.

    В блоке get выполняются действия по получению значения свойства. В этом блоке с помощью оператора return возвращаем некоторое значение.
    В блоке set устанавливается значение свойства. В этом блоке с помощью параметра value мы можем получить значение, которое передано свойству.

    Блоки get и set еще называются акссесорами или методами доступа (к значению свойства), а также геттером и сеттером.
 */

// см.далее класс Person
using Свойства;

Person person = new Person();

//  Устанавливаем свойство - срабатывает блок Set
//  значение "Tom" и есть передаваемое в свойство value
person.Name = "Tom";

//  Получаем значение свойства и присваиваем его переменной - срабатывает блок Get
string personName = person.Name;
Console.WriteLine(personName);  // Tom

Console.WriteLine();

//  Возможно, может возникнуть вопрос, зачем нужны свойства,
//  если мы можем в данной ситуации обходиться обычными полями класса?
//  Но свойства позволяют вложить дополнительную логику, которая может быть необходима при установке или получении значения.
//  Например, нам надо установить проверку по возрасту:

Person_second person_2 = new Person_second();

Console.WriteLine(person_2.Age);  // 1
// изменяем значение свойства
person_2.Age = 37;

Console.WriteLine(person_2.Age);  // 37
// пробуем передать недопустимое значение
person_2.Age = -23;               // Возраст должен быть в диапазоне от 1 до 120
Console.WriteLine(person_2.Age);  // 37 - возраст не изменился


//  Свойства только для чтения и записи

//  Блоки set и get не обязательно одновременно должны присутствовать в свойстве.
//  Если свойство определяет только блок get, то такое свойство доступно только для чтения - мы можем получить его значение, но не установить.

//  И, наоборот, если свойство имеет только блок set,
//  тогда это свойство доступно только для записи - можно только установить значение, но нельзя получить

Console.WriteLine("\nВычисляемые свойства:");

//  Вычисляемые свойства
//  Свойства необязательно связаны с определенной переменной.
//  Они могут вычисляться на основе различных выражений

Person_third lemrik = new ("Lemrik", "Panov");
Console.WriteLine(lemrik.Name);


//  Модификаторы доступа