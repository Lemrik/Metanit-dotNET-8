// Массивы характеризуются таким понятием как ранг или количество измерений.
// Выше мы рассматривали массивы, которые имеют одно измерение (то есть их ранг равен 1)
// такие массивы можно представлять в виде ряда (строки или столбца) элемента.
// Но массивы также бывают многомерными.
// У таких массивов количество измерений (то есть ранг) больше 1.

// Массивы которые имеют два измерения (ранг равен 2) называют двухмерными.
int[,] nums = { { 0, 1, 2 }, { 3, 4, 5 } };

// Все возможные способы определения двухмерных массивов:
int[,] nums1;
int[,] nums2 = new int[2, 3];
int[,] nums3 = new int[2, 3] { { 0, 1, 2 }, { 3, 4, 5 } };
int[,] nums4 = new int[,] { { 0, 1, 2 }, { 3, 4, 5 } };
int[,] nums5 = new[,] { { 0, 1, 2 }, { 3, 4, 5 } };
int[,] nums6 = { { 0, 1, 2 }, { 3, 4, 5 } };

// Объявление трехмерного массива могло бы выглядеть так:
int[,,] nums7 = new int[2, 3, 4];

// длина массива - это совокупное количество элементов.
int[,] numbers = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9} };
foreach (int i in numbers)
    Console.Write($"{i} ");

Console.WriteLine("\n");

// у каждого массива есть метод GetUpperBound(номер_размерности),
// который возвращает индекс последнего элемента в определенной размерности.

// numbers.GetUpperBound(0) + 1 - получить количество строк таблицы
// numbers.Length / numbers.GetUpperBound(0) + 1 - получить количество строк таблицы

int rows = numbers.GetUpperBound(0) + 1;    // количество строк
int columns = numbers.Length / rows;        // количество столбцов

Console.WriteLine($"Количество строк = {rows}\nКоличество столбцов = {columns}\n");

for (int i = 0; i < rows; i++)
{
    for (int j = 0; j < columns; j++)
    {
        Console.Write($"{numbers[i, j]} \t");
    }
    Console.WriteLine();
}

// Массив массивов, это такой массив, который в свою очередь содержит в себе другие массивы.
// Причем длина массива указывается только в первых квадратных скобках, все последующие квадратные скобки должны быть пусты: new int[3][].
// В данном случае у нас массив nums содержит три массива.
// Причем размерность каждого из этих массивов может не совпадать.

// Перебор зубчатого массива, с помощью вложенных цмклов:
Console.WriteLine($"\nПеребор зубчатого массива, с помощью цикла foreach:\n");
int[][] numbers1 = new int[3][];
numbers1[0] = new int[] { 1, 2 };
numbers1[1] = new int[] { 1, 2, 3 };
numbers1[2] = new int[] { 1, 2, 3, 4, 5 };

foreach (int[] row in numbers1)
{
    foreach (int number in row)
    {
        Console.Write($"{number} \t");
    }
    Console.WriteLine();
}

// перебор с помощью цикла for
Console.WriteLine($"\nПеребор зубчатого массива, с помощью цикла for\n");
for (int i = 0; i < numbers.Length; i++)
{
    for (int j = 0; j < numbers1[i].Length; j++)
    {
        Console.Write($"{numbers1[i][j]} \t");
    }
    Console.WriteLine();
}