using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Модификатор_static
{
    internal class Person_1
    {
        int age;
        /*
            В данном случае класс Person имеет два поля: age (хранит возраст человека) 
            и retirementAge (хранит пенсионный возраст). Однако поле retirementAge является статическим. 
            Оно относится не к конкретному человеку, а ко всем людям.
         */
        public static int retirementAge = 65;
        /*
            (В данном случае для упрощения пренебрежем тем фактом, 
            что в зависимости от пола и профессии пенсионный возраст может отличаться.) 
        
            Таким образом, поле retirementAge относится не к отдельную объекту и хранит значение НЕ отдельного объекта класса Person, 
            а относится ко всему классу Person и хранит общее значение для всего класса.
         */
        public Person_1(int age)
        {
            this.age = age;
        }
        public void СheckAge()
        {
            //  Причем в самом классе мы можем использовать это поле как и любые другие.
            if (age >= retirementAge)
                Console.WriteLine("Уже на пенсии");
            else
                Console.WriteLine($"Сколько лет осталось до пенсии: {retirementAge - age}");
        }
    }
}

//  Но если мы хотим обратиться к этому полю вне своего класса, то мы можем обращаться к этому полю по имени класса:
//      Console.WriteLine(Person.retirementAge);
//      Person.retirementAge = 67;

//  На уровне памяти (в куче) для статических полей будет создаваться участок в памяти, который будет общим для всех объектов класса.
//  При этом память для статических переменных выделяется даже в том случае, если не создано ни одного объекта этого класса.