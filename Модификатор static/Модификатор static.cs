//  Статические поля, методы, свойства относятся ко всему классу/всей структуре
//  и для обращения к подобным членам необязательно создавать экземпляр класса / структуры.


//  Статические поля ====================

/*
    Статические поля хранят состояние всего класса / структуры. 
    Статическое поле определяется как и обычное, только перед типом поля указывается ключевое слово static. 
    Например, рассмотрим класс Person_1, который представляет человека:
 */

using Модификатор_static;

Person_1 bob = new(68);
bob.СheckAge();     // Уже на пенсии

Person_1 tom = new(37);
tom.СheckAge();     // Сколько лет осталось до пенсии: 28

// получение статического поля
Console.WriteLine(Person_1.retirementAge); // 65
// изменение статического поля
Person_1.retirementAge = 67;


//  Статические свойства ==================== (см. класс Person_2)

//  Подобным образом мы можем создавать и использовать статические свойства 

Person_2 sam = new(68);
sam.СheckAge();

Console.WriteLine(Person_2.RetirementAge); // 65


//  Статические методы ==================== (см. класс Person_3)

Person_3 lem = new(68);
Person_3.CheckRetirementStatus(lem);


//  Статический конструктор ==================== (см. класс Person_4)

//  Кроме обычных конструкторов у класса также могут быть статические конструкторы.
//  Статические конструкторы имеют следующие отличительные черты:

//Статические конструкторы не должны иметь модификатор доступа и не принимают параметров

//  Как и в статических методах, в статических конструкторах нельзя использовать ключевое слово this
//  для ссылки на текущий объект класса и можно обращаться только к статическим членам класса

//  Статические конструкторы нельзя вызвать в программе вручную.
//  Они выполняются автоматически при самом первом создании объекта данного класса
//  или при первом обращении к его статическим членам (если таковые имеются)

//  Статические конструкторы обычно используются для инициализации статических данных,
//  либо же выполняют действия, которые требуется выполнить только один раз

Console.WriteLine(Person_4.RetirementAge);


//  Статические классы ====================
//  Статические классы объявляются с модификатором static и могут содержать только статические поля, свойства и методы.
//  Например, определим класс, который выполняет ряд арифметических операций:

Console.WriteLine(Operations.Add(5, 4));         // 9
Console.WriteLine(Operations.Subtract(5, 4));    // 1
Console.WriteLine(Operations.Multiply(5, 4));    // 20

static class Operations
{
    public static int Add(int x, int y) => x + y;
    public static int Subtract(int x, int y) => x - y;
    public static int Multiply(int x, int y) => x * y;
}